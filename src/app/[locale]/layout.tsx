import '@/styles/reset.scss';
import '@/styles/global.scss';

import React, { ReactNode } from 'react';
import type { Metadata } from 'next';
import { Inter, Sen } from 'next/font/google';
import { PageParams } from '@/types/pageParams';
import { Header } from '@/components/Header/Header';
import { Footer } from '@/components/Footer/Footer';
import { useTranslations } from 'next-intl';
import { locales } from '@/i18n';
import { unstable_setRequestLocale } from 'next-intl/server';

const sen = Sen({
  subsets: ['latin'],
  weight: ['400', '500', '700'],
  variable: '--font-sen',
  display: 'swap',
});
const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}

export default function RootLayout({
  children,
  params,
}: {
  children: ReactNode;
  params: PageParams;
}) {
  unstable_setRequestLocale(params.locale);
  const tFooter = useTranslations('footer');
  const tHeader = useTranslations('header');
  const headerMessages = ['home', 'blog', 'about', 'contacts'].map((key) =>
    tHeader(`nav.${key}`),
  );
  const footerMessages = [
    'home',
    'blog',
    'about',
    'contacts',
    'privacyPolicy',
  ].map((message) => tFooter(`nav.${message}`));

  return (
    <html lang={params.locale}>
      <body className={`${inter.className} ${sen.className}`}>
        <Header
          messages={{
            links: headerMessages,
            button: tHeader('button'),
          }}
        />
        {children}
        <Footer
          messages={{
            links: footerMessages,
            text: tFooter('text'),
            button: tFooter('button'),
          }}
        />
      </body>
    </html>
  );
}
